from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager
import time
import os

# --- CONFIGURACI√ìN DE CARPETAS ---
# üìÅ Carpeta de descargas de reportes
download_dir = os.path.join(os.getcwd(), "reportes_descargados")
if not os.path.exists(download_dir):
    os.makedirs(download_dir)

# üìÅ Carpeta de pantallazos (como los otros casos)
pantallazos_dir = os.path.join(os.getcwd(), "Pantallazos_Casos_Uso")
if not os.path.exists(pantallazos_dir):
    os.makedirs(pantallazos_dir)

# --- CONFIGURACI√ìN DEL NAVEGADOR ---
chrome_options = Options()
prefs = {
    "download.default_directory": download_dir,
    "download.prompt_for_download": False,
    "download.directory_upgrade": True,
    "plugins.always_open_pdf_externally": True
}
chrome_options.add_experimental_option("prefs", prefs)

# Iniciar navegador
driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=chrome_options)
driver.maximize_window()
wait = WebDriverWait(driver, 15)

try:
    # --- 1Ô∏è‚É£ ABRIR P√ÅGINA DE LOGIN ---
    driver.get("https://ernestine-conduplicate-potentially.ngrok-free.dev/login/")
    print("üåê P√°gina de login abierta correctamente.")

    # --- 2Ô∏è‚É£ ENCONTRAR CAMPOS DE LOGIN ---
    usuario_input = wait.until(
        EC.presence_of_element_located((By.XPATH, "//input[contains(@type,'text') or contains(@name,'user') or contains(@name,'email')]"))
    )
    password_input = wait.until(
        EC.presence_of_element_located((By.XPATH, "//input[@type='password']"))
    )

    # --- 3Ô∏è‚É£ INGRESAR CREDENCIALES ---
    usuario_input.send_keys("User_Juan16")
    password_input.send_keys("Tabogo1609:*")

    # --- 4Ô∏è‚É£ CLIC EN BOT√ìN LOGIN ---
    boton_login = wait.until(
        EC.element_to_be_clickable((By.XPATH, "//button[contains(text(),'Login') or contains(text(),'Iniciar')]"))
    )
    boton_login.click()
    print("üîê Credenciales ingresadas correctamente.")

    # --- 5Ô∏è‚É£ ESPERAR CARGA DE P√ÅGINA PRINCIPAL ---
    time.sleep(4)

    # --- 6Ô∏è‚É£ IR AL M√ìDULO DE REPORTES ---
    driver.get("https://ernestine-conduplicate-potentially.ngrok-free.dev/reportes/")
    print("üìä P√°gina de reportes abierta.")
    time.sleep(3)

    # --- 7Ô∏è‚É£ HACER CLIC EN EL BOT√ìN DE DESCARGAR PDF ---
    boton_pdf = wait.until(
        EC.element_to_be_clickable((By.XPATH, "//a[@href='/reportes/pdf/' and contains(@class,'btn-pdf')]"))
    )
    boton_pdf.click()
    print("üìÑ Clic en 'Descargar PDF' realizado correctamente.")

    # --- 8Ô∏è‚É£ ESPERAR DESCARGA ---
    time.sleep(6)

    # --- 9Ô∏è‚É£ TOMAR UN √öNICO PANTALLAZO FINAL ---
    ruta_pantallazo = os.path.join(pantallazos_dir, "Caso_Uso4_Reporte_Usuarios.png")
    driver.save_screenshot(ruta_pantallazo)
    print(f"üì∏ Pantallazo final guardado en: {ruta_pantallazo}")

    # --- üîü VALIDAR DESCARGA ---
    archivos = os.listdir(download_dir)
    print("‚úÖ Archivos descargados:", archivos)

except Exception as e:
    print("‚ö†Ô∏è Error durante la ejecuci√≥n:", e)
    ruta_error = os.path.join(pantallazos_dir, "Caso_Uso4_Reporte_Usuarios_Error.png")
    driver.save_screenshot(ruta_error)
    print(f"üì∏ Pantallazo de error guardado en: {ruta_error}")

finally:
    driver.quit()
    print("üîö Caso de uso finalizado. Navegador cerrado.")
